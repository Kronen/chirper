<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:p="http://primefaces.org/ui">

    <h:head>
        <title><ui:insert name="title">Chirper</ui:insert></title>

        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
    </h:head>

    <h:body>    
        <h:outputStylesheet library="css" name="normalize.css" />
        <h:outputStylesheet library="css" name="reset-primefaces.css" />
        <h:outputStylesheet library="css" name="home.css" />

        <ui:insert name="content">Error loading content</ui:insert> 

        <h:outputScript library="js" name="jquery-3.2.0.min.js" />
        <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCyTWLyHUGlnANR_7FC36nyB2K-F_L9PUE"></script>
        <h:outputScript library="js" name="notify.min.js" />
        <h:outputScript library="js" name="home.js" />    
        <script>
            //<![CDATA[
            var geocoder;
            var city, country;
            
            function codeLatLng(lat, lng, callback) {
                var latlng = new google.maps.LatLng(lat, lng);
                var result = "";
                geocoder.geocode({'latLng': latlng}, function(results, status) {
                    if(status === google.maps.GeocoderStatus.OK) {
                        if(results[1]) {
                            // Find the city name
                            for(var i = 0; i < results[0].address_components.length; i++) {
                              for(var b = 0; b < results[0].address_components[i].types.length; b++) {
                                if(results[0].address_components[i].types[b] === "administrative_area_level_2") {
                                    city = results[0].address_components[i];
                                    break;
                                }
                              }
                            }
                            
                            // Find the state name
                            for(var i = 0; i < results[0].address_components.length; i++) {
                              for(var b = 0; b < results[0].address_components[i].types.length; b++) {
                                if(results[0].address_components[i].types[b] === "country") {
                                    country = results[0].address_components[i];
                                    break;
                                }
                              }
                            }
                            
                            callback(city.long_name + ", " + country.long_name);
                        }
                    }
                });
                console.log('u' + result);
                return result;
            }

            $(function () {
                navigator.geolocation.getCurrentPosition(
                    function (position) {
                        $(PrimeFaces.escapeClientId('form-new-post:new-post-lat')).val(position.coords.latitude);
                        $(PrimeFaces.escapeClientId('form-new-post:new-post-lng')).val(position.coords.longitude);
                        
                        geocoder = new google.maps.Geocoder();
                        // User Location
                        $elem = $('#user-location');
                        var userLocation = codeLatLng(position.coords.latitude, position.coords.longitude,
                                function(loc) { $elem.text(loc);});
                        
                        // Posts locations
                        $('.post-location').each(function() {
                            var $elem = $(this);
                            var lat = $elem.data('lat');
                            var lng = $elem.data('lng');
                            codeLatLng(lat, lng, function(loc) { $elem.text(' Â· ' + loc);});                            
                        });
                    },
                    function(error) {
                        // no hacer nada
                    },
                    {enableHighAccuracy: true}
                );
                
            });
            //]]>
        </script>

    </h:body>
</html>